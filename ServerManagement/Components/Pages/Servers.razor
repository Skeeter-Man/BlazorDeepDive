@page "/servers"

@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<h3>Servers</h3>
<br />
<br />

<div class="container-fluid text-center">
    <div class="row">
        @foreach (var city in Cities)
        {
            <div class="col">
                <div class="card @(selectedCity.Equals(city, StringComparison.OrdinalIgnoreCase)?"border-primary":"")">
                    <img src="/images/@($"{city}.png")" class="card-img-top" alt="@($"{city}.png")">
                    <div class="card-body">
                        <h5 class="card-title">@city</h5>
                        <button type="button" class="btn btn-primary" @onclick="@(()=> { SelectCity(city); })">@city</button>
                    </div>
                </div>
            </div>
        }
    </div>

    <br />
    <button type="button" class="btn btn-primary" @onclick="@(()=> { servers = ServersRepository.GetServers(); })">Show All </button>

</div>

<br />

<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Search Servers" @bind-value="serverFilter" @bind-value:event="oninput" />
    <button class="btn btn-primary" type="button" id="button-search" @onclick="HandleSearch">Search</button>
</div>

<br />

<div class="row">
    <ul>
        <Virtualize Items="this.servers" Context="server">
            <li @key="server.Id" class="mb-1">
                @server.Name in @server.City is
                <span style="color:@(server.IsOnline ? "green" : "red")">
                    @(server.IsOnline ? "online" : "offline")
                </span>
                <a href="/editserver/@server.Id">Edit @server.Name</a>

                <EditForm Model="server"
                          Enhance="true"
                          FormName="@($"form-server-{server.Id}")"
                          OnValidSubmit="@(() => { DeleteServer(server.Id); } )">

                    <button type="submit" class="btn btn-danger">Delete @server.Name</button>
                </EditForm>

            </li>
        </Virtualize>
    </ul>

    <div class="row mb-3">
        <a href="Servers/Add" class="btn btn-success">Add Server</a>
    </div>

    <div class="row mb-3">
        <button class="btn btn-primary"
                @onclick="@(()=>
                            {
                                this.servers.Insert(0, new Server { Name = "ServerA1", City="Toronto" });
                            })">
            Add Server 3
        </button>
    </div>

</div>

@code {
    private List<Server> servers { get; set; } = ServersRepository.GetServersByCity("Toronto");

    private List<string> Cities { get; set; } = CitiesRepository.GetCities();

    private string selectedCity = "Toronto";

    private string _serverFilter = "";
    private string serverFilter
    {
        get => _serverFilter;
        set
        {
            _serverFilter = value;
            HandleSearch();
        }
    }

    private void DeleteServer(int serverId)
    {
        if (serverId > 0)
        {
            ServersRepository.DeleteServer(serverId);
            NavigationManager.Refresh();
        }
    }

    private void SelectCity(string cityName)
    {
        this.selectedCity = cityName;

        servers = ServersRepository.GetServersByCity(this.selectedCity);

        //if (cityName == "Halifax")
        //{
        //    for (int i = 16; i < 2000; i++)
        //    {
        //        servers.Add(new Server { Id = i, Name=$"Server-{i}", City = "Halifax", IsOnline = false });
        //    }
        //}
    }

    private void HandleSearch()
    {
        this.servers = ServersRepository.SearchServers(serverFilter);
        this.selectedCity = string.Empty;
    }
}
